{
  "version": 3,
  "sources": [
    "Token.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractSelectBox",
    "implement",
    "core",
    "IMultiSelection",
    "IModelSelection",
    "include",
    "MMultiSelectionHandling",
    "MModelSelection",
    "events",
    "addItem",
    "removeItem",
    "loadData",
    "properties",
    "appearance",
    "refine",
    "init",
    "typeInText",
    "check",
    "nullable",
    "event",
    "hintText",
    "noResultsText",
    "searchingText",
    "searchDelay",
    "minChars",
    "tokenLimit",
    "selectOnce",
    "labelPath",
    "style",
    "construct",
    "cache",
    "tokenfield",
    "Cache",
    "_setLayout",
    "layout",
    "Flow",
    "textField",
    "_createChildControl",
    "label",
    "getApplicationRoot",
    "add",
    "top",
    "left",
    "setAppearance",
    "getAppearance",
    "bind",
    "addListener",
    "e",
    "setWidth",
    "getBounds",
    "stop",
    "_onClick",
    "fireNonBubblingEvent",
    "type",
    "Focus",
    "setLiveUpdate",
    "_onInputChange",
    "setMinWidth",
    "_search",
    "_dummy",
    "ListItem",
    "setEnabled",
    "getChildControl",
    "setHintText",
    "getTypeInText",
    "members",
    "SELECTION_MANAGER",
    "SelectionManager",
    "_createChildControlImpl",
    "id",
    "control",
    "basic",
    "Label",
    "hide",
    "TextField",
    "setFocusable",
    "addState",
    "close",
    "_add",
    "setSelectionMode",
    "popup",
    "Popup",
    "VBox",
    "setAutoHide",
    "setKeepActive",
    "_onPopupChangeVisibility",
    "focus",
    "getFocusElement",
    "tabFocus",
    "field",
    "tabBlur",
    "blur",
    "_forwardStates",
    "focused",
    "_onBlur",
    "__selected",
    "removeState",
    "toggle",
    "_onKeyPress",
    "key",
    "getKeyIdentifier",
    "list",
    "isVisible",
    "open",
    "stopPropagation",
    "textfield",
    "value",
    "getValue",
    "children",
    "_getChildren",
    "index",
    "indexOf",
    "length",
    "_deselectItem",
    "start",
    "getTextSelectionStart",
    "getTextSelectionLength",
    "n_children",
    "item",
    "index_textfield",
    "_addBefore",
    "_addAfter",
    "util",
    "TimerManager",
    "getInstance",
    "__preSelectedItem",
    "_selectItem",
    "setValue",
    "handleKeyPress",
    "str",
    "getData",
    "getMinChars",
    "timer",
    "__timerId",
    "search",
    "getSearchDelay",
    "_onListPointerDown",
    "debug",
    "_onListChangeSelection",
    "current",
    "context",
    "getSelectionContext",
    "removeAll",
    "setLabel",
    "getSearchingText",
    "fireDataEvent",
    "populateList",
    "data",
    "marshal",
    "Json",
    "createModel",
    "result",
    "get",
    "getLength",
    "getNoResultsText",
    "i",
    "getSelectOnce",
    "_isSelected",
    "getItem",
    "getLabelPath",
    "highlight",
    "setModel",
    "setRich",
    "addToken",
    "selected",
    "model",
    "hasChildren",
    "getChildren",
    "remove",
    "selection",
    "getModelSelection",
    "item_model",
    "constructor",
    "removeFromSelection",
    "destroy",
    "getChildrenContainer",
    "reset",
    "getSelection",
    "forEach",
    "old",
    "getModel",
    "setAnonymous",
    "setIconPosition",
    "getStyle",
    "getWidth",
    "addToSelection",
    "query",
    "replace",
    "RegExp",
    "destruct",
    "_disposeObjects",
    "Token"
  ],
  "mappings": "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",
  "file": "Token.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright:\n     2010 Guilherme R. Aiolfi\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Guilherme R. Aiolfi (guilhermeaiolfi)\n     * Christian Boulanger (cboulanger) - added some documentation\n\n************************************************************************ */\n\n/**\n * A widget implementing the token field concept known from Mac OS X\n * @see http://developer.apple.com/mac/library/documentation/Cocoa/Conceptual/TokenField_Guide/Introduction/Introduction.html\n * @asset(tokenfield/*)\n */\nqx.Class.define(\"tokenfield.Token\",\n{\n  extend : qx.ui.form.AbstractSelectBox,\n  implement : [qx.ui.core.IMultiSelection, qx.ui.form.IModelSelection],\n  include : [qx.ui.core.MMultiSelectionHandling, qx.ui.form.MModelSelection],\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n  events :\n  {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : \"qx.event.type.Data\",\n\n    /**\n     * This event is fired when the widget needs external data. The data dispatched\n     * with the event is the string fragment to use to find matching items\n     * as the data. The event listener must then load the data from whereever\n     * it may come and call populateList() with the string fragment and the\n     * received data.\n     */\n    loadData : \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    // /**\n    //  * The orientation of the widget\n    //  * not implemented\n    //  */\n    // orientation :\n    // {\n    //   check : [\"horizontal\", \"vertical\"],\n    //   init : \"vertical\",\n    //   apply : \"_applyOrientation\"\n    // },\n\n    /**\n     * The appearance of the widget\n     */\n    appearance :\n    {\n      refine : true,\n      init : \"token\"\n    },\n\n    /**\n     * The message prompting the user to type in text\n     */\n    typeInText :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeTypeInText\",\n      init : \"Type in a search term\"\n    },\n\n    /**\n     * The current hint message\n     */\n    hintText :\n    {\n      check : \"String\",\n      nullable : true,\n      event : \"changeHintText\",\n      init : null\n    },\n\n    /**\n     * The message indicating that there were no results\n     */\n    noResultsText :\n    {\n      check : \"String\",\n      nullable : true,\n      init : \"No results\"\n    },\n\n    /**\n     * The message indicating that the application is loading data\n     * in response to the user's input\n     */\n    searchingText :\n    {\n      check : \"String\",\n      nullable : true,\n      init : \"Searching...\"\n    },\n\n    /**\n     * The delay in milliseconds before a request is sent\n     */\n    searchDelay : {\n      init : 300\n    },\n\n    /**\n     * The minimum number of characters before a request is sent\n     */\n    minChars : {\n      init : 2\n    },\n\n    /**\n     * The maximum number of tokens that can be entered\n     */\n    tokenLimit :\n    {\n      init : null,\n      nullable : true\n    },\n\n    /**\n     * If true, an item on the suggested list of items can be selected only\n     * once (and is then removed from the list). If false, the item can be\n     * selected multiple times (default).\n     */\n    selectOnce :\n    {\n      init : false,\n      check : \"Boolean\"\n    },\n\n    /**\n     * The path to the label in the model\n     */\n    labelPath : {\n      init : \"label\"\n    },\n\n    /**\n     * The style of the token. if \"facebook\", then the labels are as wide as the containing text\n     * (best for horizontal TokenFields). If any other value, the labels span the width of the container\n     * widget (best for vertical TokenFields).\n     */\n    style : {\n      init : \"facebook\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct : function()\n  {\n    this.base(arguments);\n    this.cache = new tokenfield.Cache();\n    this._setLayout(new qx.ui.layout.Flow());\n    var textField = this._createChildControl(\"textfield\");\n    var label = this._createChildControl(\"label\");\n    this.getApplicationRoot().add(label,\n    {\n      top : -10,\n      left : -1000\n    });\n    label.setAppearance(textField.getAppearance());\n    textField.bind(\"value\", label, \"value\");\n    textField.addListener(\"keypress\", function(e) {\n      //label.setValue(textField.getValue());\n      textField.setWidth(label.getBounds()[\"width\"] + 8);\n    }, this);\n    textField.addListener(\"mousedown\", function(e) {\n      e.stop();\n    });\n    this.addListener(\"click\", this._onClick);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener(\"focusin\", function(e) {\n      textField.fireNonBubblingEvent(\"focusin\", qx.event.type.Focus);\n    }, this);\n    this.addListener(\"focusout\", function(e) {\n      textField.fireNonBubblingEvent(\"focusout\", qx.event.type.Focus);\n    }, this);\n    textField.setLiveUpdate(true);\n    textField.addListener(\"input\", this._onInputChange, this);\n    textField.setMinWidth(6);\n    this._search = \"\";\n    this._dummy = new qx.ui.form.ListItem();\n    this._dummy.setEnabled(false);\n    this.bind(\"hintText\", this._dummy, \"label\");\n    this.getChildControl('list').add(this._dummy);\n    this.addListener(\"appear\", function(){\n        this.setHintText(this.getTypeInText());\n    },this);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n    SELECTION_MANAGER : tokenfield.SelectionManager,\n\n    /*\n    ---------------------------------------------------------------------------\n       WIDGET CREATION\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl : function(id)\n    {\n      var control;\n      switch (id)\n      {\n        case \"label\":\n          control = new qx.ui.basic.Label();\n          //control.setWidth(10);\n          control.hide();\n          break;\n        case \"button\":\n          return null;\n          break;\n        case \"textfield\":\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState(\"inner\");\n\n          //control.addListener(\"changeValue\", this._onTextFieldChangeValue, this);\n          control.addListener(\"blur\", this.close, this);\n          this._add(control);\n          break;\n        case \"list\":\n          // Get the list from the AbstractSelectBox\n          control = this.base(arguments, id);\n\n          // Change selection mode\n          control.setSelectionMode(\"single\");\n          break;\n        case \"popup\":\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox);\n          control.setAutoHide(true);\n          control.setKeepActive(true);\n          control.addListener(\"mouseup\", this.close, this);\n          control.add(this.getChildControl(\"list\"));\n          control.addListener(\"changeVisibility\", this._onPopupChangeVisibility, this);\n          break;\n      }\n      return control || this.base(arguments, id);\n    },\n\n    // overridden\n    focus : function()\n    {\n      this.base(arguments);\n      this.getChildControl(\"textfield\").getFocusElement().focus();\n    },\n\n    // overridden\n    tabFocus : function()\n    {\n      var field = this.getChildControl(\"textfield\");\n      field.getFocusElement().focus();\n\n      //field.selectAllText();\n    },\n    tabBlur : function()\n    {\n      var field = this.getChildControl(\"textfield\");\n      field.getFocusElement().blur();\n    },\n\n    // overridden\n\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onBlur : function(e) {\n      return;\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Mouse} Mouse click event\n     */\n    _onClick : function(e)\n    {\n      if (this.__selected) {\n        this.__selected.removeState(\"head\");\n      }\n      this.__selected = null;\n      this.toggle();\n    },\n\n    // overridden\n    _onKeyPress : function(e)\n    {\n      var key = e.getKeyIdentifier();\n      var list = this.getChildControl(\"popup\");\n      if (key == \"Down\" && !list.isVisible())\n      {\n        this.open();\n        e.stopPropagation();\n        e.stop();\n      } else if (key == \"Backspace\" || key == \"Delete\")\n      {\n        var textfield = this.getChildControl('textfield');\n        var value = textfield.getValue();\n        var children = this._getChildren();\n        var index = children.indexOf(textfield);\n        if (value == null || value == \"\" && !this.__selected) {\n          if (key == \"Delete\" && index < (children.length - 1))\n          {\n            this.__selected = children[index + 1];\n            this.__selected.addState(\"head\");\n            this.focus();\n          } else if (key == \"Backspace\" && index > 0)\n          {\n            this.__selected = children[index - 1];\n            this.__selected.addState(\"head\");\n            this.focus();\n          }\n\n        } else if (this.__selected)\n        {\n          this._deselectItem(this.__selected);\n          this.__selected = null;\n          this.tabFocus();\n          e.stop();\n        }\n\n      } else if (key == \"Left\" || key == 'Right')\n      {\n        var textfield = this.getChildControl('textfield');\n        var start = textfield.getTextSelectionStart();\n        var length = textfield.getTextSelectionLength();\n        var children = this._getChildren();\n        var n_children = children.length;\n        var item = this.__selected ? this.__selected : textfield;\n        var index = children.indexOf(item);\n        if (item == textfield) {\n          if (key == 'Left')index -= 1;\n           else index += 1;\n\n        }\n        var index_textfield = children.indexOf(textfield);\n        if (key == \"Left\" && index >= 0 && start == 0 && length == 0) {\n          this._addBefore(textfield, children[index]);\n        } else if (key == \"Right\" && index < n_children && start == textfield.getValue().length) {\n          this._addAfter(textfield, children[index]);\n        }\n\n        if (this.__selected) {\n          this.__selected.removeState(\"head\");\n        }\n        this.__selected = null;\n\n        // I really don't know, but FF needs the timer to be able to set the focus right\n        // when there is a selected item and the key == 'Left'\n        qx.util.TimerManager.getInstance().start(function() {\n          this.tabFocus();\n        }, null, this, null, 20);\n      } else if (key == \"Enter\" || key == \"Space\") {\n        if (this.__preSelectedItem && this.getChildControl('popup').isVisible())\n        {\n          this._selectItem(this.__preSelectedItem);\n          this.__preSelectedItem = null;\n          this.toggle();\n        } else if (key == \"Space\")\n        {\n          var textfield = this.getChildControl('textfield');\n          textfield.setValue(textfield.getValue() + \" \");\n          e.stop();\n        }\n\n      } else if (key == \"Escape\") {\n        this.close();\n      } else if (key != \"Left\" && key != \"Right\") {\n        this.getChildControl(\"list\").handleKeyPress(e);\n      }\n    },\n\n    /**\n     * Event listener for <code>input</code> event on the textfield child\n     *\n     * @param e {qx.event.type.Data} Data Event\n     */\n    _onInputChange : function(e)\n    {\n      var str = e.getData();\n      if (str == null || (str != null && str.length < this.getMinChars())) {\n        return false;\n      }\n      var timer = qx.util.TimerManager.getInstance();\n\n      // check for the old listener\n      if (this.__timerId !== null)\n      {\n        // stop the old one\n        timer.stop(this.__timerId);\n        this.__timerId = null;\n      }\n\n      // start a new listener to update the controller\n      this.__timerId = timer.start(function()\n      {\n        this.search(str);\n        this.__timerId = null;\n      }, 0, this, null, this.getSearchDelay());\n    },\n\n    // overridden\n    _onListPointerDown : function(e)\n    {\n      this.debug(this.__preSelectedItem);\n      // Apply pre-selected item (translate quick selection to real selection)\n      if (this.__preSelectedItem)\n      {\n        this._selectItem(this.__preSelectedItem);\n        this.__preSelectedItem = null;\n      }\n    },    \n\n    // overridden\n    _onListChangeSelection : function(e)\n    {\n      var current = e.getData();\n      if (current.length > 0)\n      {\n        // Ignore quick context (e.g. mouseover)\n        // and configure the new value when closing the popup afterwards\n        var list = this.getChildControl(\"list\");\n        var popup = this.getChildControl(\"popup\");\n        var context = list.getSelectionContext();\n        if (popup.isVisible() && (context == \"quick\" || context == \"key\")) {\n          this.__preSelectedItem = current[0];\n        } else {\n          this.__preSelectedItem = null;\n        }\n      }\n    },\n\n    // overridden\n    _onPopupChangeVisibility : function(e) {\n      this.tabFocus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fire a event to search for a string\n     *\n     * @param str {String} query to search for\n     */\n    search : function(str)\n    {\n      this.getChildControl('list').removeAll();\n      this._dummy.setLabel(this.getSearchingText());\n      this.getChildControl('list').add(this._dummy);\n      this.open();\n      this._search = str;\n      this.fireDataEvent(\"loadData\", str);\n    },\n\n    /**\n     * Populates the list with the data received from the data source\n     *\n     * @param str {String} The string fragment that was used for retrieving\n     *    the autoocomplete data.\n     * @param data {Object} A javascript object that contains the autocomplete\n     *    data\n     * @return {void}\n     */\n    populateList : function(str, data)\n    {\n      this.cache.add(str, qx.data.marshal.Json.createModel(data));\n      var result = this.cache.get(str);\n      var list = this.getChildControl('list');\n      list.removeAll();\n      if (result.getLength() == 0)\n      {\n        this._dummy.setLabel(this.getNoResultsText());\n        list.add(this._dummy);\n        return;\n      }\n      for (var i = 0; i < result.getLength(); i++) {\n        if (!this.getSelectOnce() || (this.getSelectOnce() == true && !this._isSelected(result.getItem(i))))\n        {\n          var label = result.getItem(i).get(this.getLabelPath());\n          var item = new qx.ui.form.ListItem(this.highlight(label, str));\n          item.setModel(result.getItem(i));\n          item.setRich(true);\n          this.getChildControl('list').add(item);\n        }\n      }\n    },\n\n    /**\n     * Add a token to the list\n     * @param itemModelData {Object} The data of the token. The label to be\n     *      shown must be in the label path ({@link tokenfield.Token#labelPath})\n     *      of the model.\n     * @param selected {Boolean | undefined} Whether the token should be selected\n     */\n    addToken : function(data, selected)\n    {\n      var model = qx.data.marshal.Json.createModel(data);\n      var label = model.get(this.getLabelPath());\n      var item = new qx.ui.form.ListItem(this.highlight(label, this._search));\n      item.setModel(model);\n      item.setRich(true);\n      var list = this.getChildControl('list');\n      if (!this.getSelectOnce() || (this.getSelectOnce() == true && !this._isSelected(model)))\n      {\n        if (list.hasChildren() && list.getChildren()[0] == this._dummy) {\n          list.remove(this._dummy);\n        }\n        list.add(item);\n      }\n      if (selected && !this._isSelected(model)) {\n        this._selectItem(item);\n      }\n    },\n\n    /**\n     * Tests and see if the model is already selected or not\n     *\n     * @param model {qx.core.Object} Model to be tested\n     * @returns {Boolean}\n     */\n    _isSelected : function(model)\n    {\n      var selection = this.getModelSelection();\n      var item = null, item_model = null;\n      for (var i = 0; i < selection.getLength(); i++)\n      {\n        item = selection.getItem(i);\n        if (item && model && item.get(this.getLabelPath()) == model.get(this.getLabelPath())) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes an item from the selection\n     *\n     * @param item {qx.ui.form.ListItem} The List Item to be removed from the selection\n     */\n    _deselectItem : function(item) {\n      if (item && item.constructor == qx.ui.form.ListItem)\n      {\n        this.removeFromSelection(item);\n        this.fireDataEvent(\"removeItem\", item);\n        item.destroy();\n      }\n    },\n\n    // overridden\n    getChildrenContainer : function() {\n      return this;\n    },\n\n    /**\n     * Resets the widget\n     */\n    reset : function()\n    {\n      this.getSelection().forEach(function(item) {\n        if (item instanceof qx.ui.form.ListItem)\n        {\n          this.removeFromSelection(item);\n          item.destroy();\n        }\n      }, this);\n      this.getChildren().forEach(function(item) {\n        if (item instanceof qx.ui.form.ListItem)\n        {\n          this.remove(item);\n          item.destroy();\n        }\n      }, this);\n      this.getChildControl('textfield').setValue(\"\");\n      this.getChildControl('list').removeAll();\n      this.getChildControl('list').add(this._dummy);\n    },\n\n    /**\n     * Adds an item to the selection\n     *\n     * @param item {qx.ui.form.ListItem} The List Item to be added to the selection\n     */\n    _selectItem : function(old) {\n      if (old && old.constructor == qx.ui.form.ListItem)\n      {\n        var item = this.getSelectOnce() ? old : new qx.ui.form.ListItem();\n        item.setAppearance(\"tokenitem\");\n        item.setLabel(old.getModel().get(this.getLabelPath()));\n        item.setModel(old.getModel());\n        item.getChildControl('icon').setAnonymous(false);\n        item.getChildControl('icon').addListener(\"click\", function(e)\n        {\n          if (this.__selected)\n          {\n            this.__selected.removeState(\"head\");\n            this.__selected = null;\n          }\n          this._deselectItem(item);\n          e.stop();\n          this.tabFocus();\n        }, this);\n        item.addListener(\"click\", function(e)\n        {\n          item.addState(\"head\");\n          if (this.__selected != null && this.__selected != item) {\n            this.__selected.removeState(\"head\");\n          }\n          this.__selected = item;\n          e.stop();\n        }, this);\n        item.setIconPosition(\"right\");\n        item.getChildControl('icon').addListener(\"mouseover\", function() {\n          item.addState('close');\n        });\n        item.getChildControl('icon').addListener(\"mouseout\", function() {\n          item.removeState('close');\n        });\n        if (this.getStyle() != \"facebook\") {\n          item.getChildControl(\"label\").setWidth(this.getWidth() - 29);\n        }\n        this._addBefore(item, this.getChildControl('textfield'));\n        this.addToSelection(item);\n        this.fireDataEvent(\"addItem\", item);\n        this.getChildControl('textfield').setValue(\"\");\n\n        //if the selected one was the last one, include dummy item\n        if (this.getChildControl('list').getChildren() && this.getChildControl('list').getChildren().length == 0)\n        {\n          this.setHintText(this.getTypeInText());\n          this.getChildControl('list').add(this._dummy);\n        }\n      }\n    },\n\n    /**\n     * Highlight the searched string fragment\n     *\n     * @param value {String} The phrase containing the frament to be highlighted\n     * @param query {String} The string fragment that should be highlited\n     * @return {String} TODOC\n     */\n    highlight : function(value, query) {\n      return value.replace(new RegExp(\"(?![^&;]+;)(?!<[^<>]*)(\" + query + \")(?![^<>]*>)(?![^&;]+;)\", \"gi\"), \"<b>$1</b>\");\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n  destruct : function() {\n    this._disposeObjects(\"_dummy\", \"cache\");\n  }\n});\n"
  ]
}